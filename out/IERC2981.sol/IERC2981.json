{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/solady/lib/ds-test/src/\",\":ethfs/=lib/ethfs/\",\":ethier/=lib/ethfs/packages/contracts/lib/ethier/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3db2f7cfdca3ff738f96f68523efe41ca0a8618a0af390e207873fa78ea3a0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9b390c408d56cb9f4d29b8c52f96410a2d434b695d394b7da519eb2891962af\",\"dweb:/ipfs/QmdcJY7ykuuo4fD5HedhHQDrzEb8mqr5ptNbMpXyPHfkxe\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/solady/lib/ds-test/src/",
        ":ethfs/=lib/ethfs/",
        ":ethier/=lib/ethfs/packages/contracts/lib/ethier/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solady/=lib/solady/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol": "IERC2981"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol": {
        "keccak256": "0x3db2f7cfdca3ff738f96f68523efe41ca0a8618a0af390e207873fa78ea3a0ac",
        "urls": [
          "bzz-raw://f9b390c408d56cb9f4d29b8c52f96410a2d434b695d394b7da519eb2891962af",
          "dweb:/ipfs/QmdcJY7ykuuo4fD5HedhHQDrzEb8mqr5ptNbMpXyPHfkxe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6",
        "urls": [
          "bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846",
          "dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
    "id": 27292,
    "exportedSymbols": {
      "IERC165": [
        27525
      ],
      "IERC2981": [
        27291
      ]
    },
    "nodeType": "SourceUnit",
    "src": "107:780:20",
    "nodes": [
      {
        "id": 27274,
        "nodeType": "PragmaDirective",
        "src": "107:24:20",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 27275,
        "nodeType": "ImportDirective",
        "src": "133:44:20",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "file": "../utils/introspection/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27292,
        "sourceUnit": 27526,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27291,
        "nodeType": "ContractDefinition",
        "src": "469:417:20",
        "nodes": [
          {
            "id": 27290,
            "nodeType": "FunctionDefinition",
            "src": "741:143:20",
            "nodes": [],
            "documentation": {
              "id": 27279,
              "nodeType": "StructuredDocumentation",
              "src": "505:231:20",
              "text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
            },
            "functionSelector": "2a55205a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "royaltyInfo",
            "nameLocation": "750:11:20",
            "parameters": {
              "id": 27284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27281,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "779:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27290,
                  "src": "771:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27283,
                  "mutability": "mutable",
                  "name": "salePrice",
                  "nameLocation": "804:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27290,
                  "src": "796:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "761:58:20"
            },
            "returnParameters": {
              "id": 27289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27286,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "851:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27290,
                  "src": "843:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27288,
                  "mutability": "mutable",
                  "name": "royaltyAmount",
                  "nameLocation": "869:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 27290,
                  "src": "861:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "842:41:20"
            },
            "scope": 27291,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 27277,
              "name": "IERC165",
              "nameLocations": [
                "491:7:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27525,
              "src": "491:7:20"
            },
            "id": 27278,
            "nodeType": "InheritanceSpecifier",
            "src": "491:7:20"
          }
        ],
        "canonicalName": "IERC2981",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 27276,
          "nodeType": "StructuredDocumentation",
          "src": "179:289:20",
          "text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants.\n _Available since v4.5._"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          27291,
          27525
        ],
        "name": "IERC2981",
        "nameLocation": "479:8:20",
        "scope": 27292,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 20
}