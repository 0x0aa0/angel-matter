// SPDX-License-Identifier: Unlicense
pragma solidity 0.8.20;

import {Script} from "forge-std/Script.sol";
import {IFileStore} from "../lib/ethfs/packages/contracts/src/IFileStore.sol";

contract Upload is Script {
    address ETHFS_MAINNET = 0x9746fD0A77829E12F8A9DBe70D7a322412325B91;
    address ETHFS_TESTNET = 0x5E348d0975A920E9611F8140f84458998A53af94;

    IFileStore fileStore = IFileStore(ETHFS_MAINNET);

    bytes content =
        "";

    bytes content2 =
        "CmZ1bmN0aW9uIHNldHVwKCkgewogIGNyZWF0ZUNhbnZhcyg1MDAsIDUwMCk7CiAgYmxlbmRNb2RlKEhBUkRfTElHSFQpOwogIG5vU3Ryb2tlKCk7CiAgcmFuZG9tU2VlZChzZWVkKTsKICBpZihtb2RlID09IDApewogICAgbm9Mb29wKCk7CiAgfQp9CgpmdW5jdGlvbiBkcmF3KCkgewogIGJhY2tncm91bmQoMCk7CiAgaWYobW9kZSA9PSAwKXsKICAgIHN0YXIoMTI1LDEyNSwyNTApOwogICAgc3RhcigzNzUsMzc1LDI1MCk7CiAgICBzdGFyKDM3NSwxMjUsMjUwKTsKICAgIHN0YXIoMTI1LDM3NSwyNTApOyAKICAgIGZpbHRlcihJTlZFUlQpCiAgfSBlbHNlIHsKICAgIGJhY2tncm91bmQoMCk7CiAgZm9yKHZhciBpID0gMDsgaSA8IDU7IGkrKyl7CiAgICB0cmlhbmdsZShyYW5kb20oNDAwLDUwMCksIHJhbmRvbSg0MDAsNTAwKSwgcmFuZG9tKDIwMCwzMDApLCByYW5kb20oMjAwLDMwMCksIHJhbmRvbSgyMDAsMzAwKSwgcmFuZG9tKDIwMCwzMDApKTsKICAgIHRyaWFuZ2xlKHJhbmRvbSgxMDApLCByYW5kb20oMTAwKSwgcmFuZG9tKDIwMCwzMDApLCAgIHJhbmRvbSgyMDAsMzAwKSwgcmFuZG9tKDIwMCwzMDApLCByYW5kb20oMjAwLDMwMCkpOwogICAgdHJpYW5nbGUocmFuZG9tKDQwMCw1MDApLCByYW5kb20oMTAwKSwgcmFuZG9tKDIwMCwzMDApLCByYW5kb20oMjAwLDMwMCksIHJhbmRvbSgyMDAsMzAwKSwgcmFuZG9tKDIwMCwzMDApKTsKICAgIHRyaWFuZ2xlKHJhbmRvbSgxMDApLCByYW5kb20oNDAwLDUwMCksIHJhbmRvbSgyMDAsMzAwKSwgICByYW5kb20oMjAwLDMwMCksIHJhbmRvbSgyMDAsMzAwKSwgcmFuZG9tKDIwMCwzMDApKTsKICAgIHRyaWFuZ2xlKHJhbmRvbSgyMDAsMzAwKSwgcmFuZG9tKDQwMCw1MDApLCByYW5kb20oMjAwLDMwMCksIHJhbmRvbSgyMDAsMzAwKSwgcmFuZG9tKDIwMCwzMDApLCByYW5kb20oMjAwLDMwMCkpOwogICAgdHJpYW5nbGUocmFuZG9tKDIwMCwzMDApLCByYW5kb20oMTAwKSwgcmFuZG9tKDIwMCwzMDApLCAgIHJhbmRvbSgyMDAsMzAwKSwgcmFuZG9tKDIwMCwzMDApLCByYW5kb20oMjAwLDMwMCkpOwogICAgdHJpYW5nbGUocmFuZG9tKDQwMCw1MDApLCByYW5kb20oMjAwLDMwMCksIHJhbmRvbSgyMDAsMzAwKSwgcmFuZG9tKDIwMCwzMDApLCByYW5kb20oMjAwLDMwMCksIHJhbmRvbSgyMDAsMzAwKSk7CiAgICB0cmlhbmdsZShyYW5kb20oMTAwKSwgcmFuZG9tKDIwMCwzMDApLCByYW5kb20oMjAwLDMwMCksICAgcmFuZG9tKDIwMCwzMDApLCByYW5kb20oMjAwLDMwMCksIHJhbmRvbSgyMDAsMzAwKSk7CiAgICBmaWx0ZXIoSU5WRVJUKQogIH0KICBmaWx0ZXIoSU5WRVJUKQogIH0KfQoKZnVuY3Rpb24gc3Rhcih4LCB5LCBzKXsKICBmb3IodmFyIGkgPSAwOyBpIDwgNTsgaSsrKXsKICAgIHIgPSAoKGkrMSkgKiA1MCkgLSByYW5kb20oMjU1IC0gKGkqNTApKQogICAgZyA9ICgoaSsxKSAqIDUwKSAtIHJhbmRvbSgyNTUgLSAoaSo1MCkpCiAgICBiID0gKChpKzEpICogNTApIC0gcmFuZG9tKDI1NSAtIChpKjUwKSkKICAgIGZpbGwocixnLGIpOwoKICAgIHhfeiA9IHggLSAocy8yKQogICAgeF9vID0geF96ICsgKHMvNCkKICAgIHhfdCA9IHggLSAocy80KQogICAgeF90aCA9IHggKyAocy80KQogICAgeF9maSA9IHggKyAocy8yKQogICAgeF9mbyA9IHhfZmkgLSAocy80KQoKICAgIHlfeiA9IHkgLSAocy8yKQogICAgeV9vID0geV96ICsgKHMvNCkKICAgIHlfdCA9IHkgLSAocy80KQogICAgeV90aCA9IHkgKyAocy80KQogICAgeV9maSA9IHkgKyAocy8yKQogICAgeV9mbyA9IHlfZmkgLSAocy80KQoKICAgIHRyaWFuZ2xlKHJhbmRvbSh4X2ZvLCB4X2ZpKSwgcmFuZG9tKHlfZm8sIHlfZmkpLCByYW5kb20oeF90LHhfdGgpLCByYW5kb20oeV90LHlfdGgpLCByYW5kb20oeF90LHhfdGgpLCByYW5kb20oeV90LHlfdGgpKTsKICAgICAgdHJpYW5nbGUocmFuZG9tKHhfeiwgeF9vKSwgcmFuZG9tKHlfeiwgeV9vKSwgcmFuZG9tKHhfdCx4X3RoKSwgcmFuZG9tKHlfdCx5X3RoKSwgcmFuZG9tKHhfdCx4X3RoKSwgcmFuZG9tKHlfdCx5X3RoKSk7CiAgICAgIHRyaWFuZ2xlKHJhbmRvbSh4X2ZvLCB4X2ZpKSwgcmFuZG9tKHlfeiwgeV9vKSwgcmFuZG9tKHhfdCx4X3RoKSwgcmFuZG9tKHlfdCx5X3RoKSwgcmFuZG9tKHhfdCx4X3RoKSwgcmFuZG9tKHlfdCx5X3RoKSk7CiAgICAgIHRyaWFuZ2xlKHJhbmRvbSh4X3osIHhfbyksIHJhbmRvbSh5X2ZvLHlfZmkpLCByYW5kb20oeF90LHhfdGgpLCByYW5kb20oeV90LHlfdGgpLCByYW5kb20oeF90LHhfdGgpLCByYW5kb20oeV90LHlfdGgpKTsKICAgIAogICAgZmlsdGVyKElOVkVSVCkKICB9Cn0=";

    function run() external {
        vm.startBroadcast();

        (bytes32 checksum, ) = fileStore.contentStore().addContent(content);

        bytes32[] memory checksums = new bytes32[](1);
        checksums[0] = checksum;

        fileStore.createFile(":)", checksums);

        (bytes32 checksum2, ) = fileStore.contentStore().addContent(content2);

        bytes32[] memory checksums2 = new bytes32[](1);
        checksums2[0] = checksum2;

        fileStore.createFile("(:", checksums2);

        vm.stopBroadcast();
    }
}
